name: Deploy to Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -t word-book:${{ github.sha }} .

    - name: Test Docker image
      run: |
        # Run container in background
        docker run -d --name test-container -p 8080:8080 -e PORT=8080 word-book:${{ github.sha }}
        
        # Wait for container to start
        sleep 10
        
        # Test health check
        curl -f http://localhost:8080/health || exit 1
        
        # Test main page
        curl -f http://localhost:8080/ || exit 1
        
        # Stop test container
        docker stop test-container
        docker rm test-container

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Notify deployment
      run: |
        echo "ðŸš€ Deploy step - integrate with your deployment platform here"
        echo "Image ready: word-book:${{ github.sha }}"
        
        # Example: If using Railway, Render, or similar platforms
        # they typically auto-deploy when you push to main branch
        # with a Dockerfile present
        
        if [ -n "${{ vars.WEBHOOK_URL }}" ]; then
          curl -X POST "${{ vars.WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            -d '{"status":"deployed","commit":"${{ github.sha }}","app":"word-book"}'
        fi 